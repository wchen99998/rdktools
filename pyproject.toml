[project]
name = "rdkit-data-pipeline-tools"
version = "0.1.3"
description = "High-performance molecular operations using RDKit's C++ core through nanobind bindings"
readme = "README.md"
authors = [
    { name = "wuhao", email = "wuhao@novogaia.bio" }
]
license = { text = "MIT" }
requires-python = ">=3.12"
dependencies = [
    "numpy>=1.20.0",
    "tensorflow==2.19.0",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
keywords = ["chemistry", "cheminformatics", "rdkit", "molecular", "descriptors"]

[tool.scikit-build]
minimum-version = "0.10"
build-dir = "build/{wheel_tag}"
cmake.version = ">=3.15"

# CMake configuration for finding RDKit
cmake.define.CMAKE_BUILD_TYPE = "Release"
cmake.define.CMAKE_CXX_STANDARD = "17"
cmake.define.RDKTOOLS_BOOST_VERSION = "1.88.0"
logging.level = "INFO"

# Install the compiled module into the rdktools package
wheel.install-dir = ""

# Platform wheel configuration for PyPI compatibility
wheel.platlib = true
wheel.packages = ["src/rdktools"]

# SDist configuration
sdist.include = [
    "src/",
    "CMakeLists.txt",
    "README.md",
    "pyproject.toml",
]
sdist.exclude = [
    "build/",
    "__pycache__/",
    "*.pyc",
    ".git/",
    ".python-version",
]

[build-system]
requires = [
    "scikit-build-core==0.11.6",
    "nanobind==2.8.0",
    "tensorflow==2.19.0",
]
build-backend = "scikit_build_core.build"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "black",
    "isort",
    "auditwheel>=6.4.2",
]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v"

[tool.cibuildwheel]
build = ["cp312-manylinux_x86_64", "cp312-macosx_arm64"]
test-requires = ["pytest"]
test-command = "pytest {project}/tests"
environment = { RDKTOOLS_BOOST_JOBS = "4" }

[tool.cibuildwheel.linux]
before-all = "yum install -y git tar bzip2 which eigen3-devel cairo-devel hdf5-devel"

[tool.cibuildwheel.macos]
environment = { MACOSX_DEPLOYMENT_TARGET = "12.0", RDKTOOLS_BOOST_JOBS = "6" }
